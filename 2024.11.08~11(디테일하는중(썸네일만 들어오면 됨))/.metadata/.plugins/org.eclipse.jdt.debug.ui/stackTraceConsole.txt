// 홈 버튼 클릭 시 이동
		document.getElementById('home').addEventListener('click', function () {
			window.location.href = 'http://localhost:8080/home';
		});

		// report 데이터 가져오기
		axios.get(`/report/${studyKey}`)
			.then(response => {
				const data = response.data;
				if (data) {
					document.getElementById('comment').value = data.reportComment || '';
					document.getElementById('radiologist1').value = data.userName || '';
					document.getElementById('report-date').value = data.reportTime || '날짜 정보 없음';
				}
			})
			.catch(error => console.error('헤헤 에러났다', error));

		// 저장 버튼 클릭 시 입력된 데이터를 서버로 전송하는 기능
		document.getElementById('save-report').addEventListener('click', function () {
			const now = new Date();
			const reportTime = now.getFullYear() + "-" +
				String(now.getMonth() + 1).padStart(2, '0') + "-" +
				String(now.getDate()).padStart(2, '0') + "T" +
				String(now.getHours()).padStart(2, '0') + ":" +
				String(now.getMinutes()).padStart(2, '0') + ":" +
				String(now.getSeconds()).padStart(2, '0');

			const reportData = {
				studyKey: studyKey, // 실제 studyKey 값으로 변경하세요.
				reportComment: document.getElementById('comment').value,
				userName: document.getElementById('radiologist1').value,
				reportTime: reportTime // 포맷팅된 문자열
			};

			axios.post('/report/save', reportData)
				.then(response => {
					console.log('Report saved:', response.data);
					alert('저장되었습니다!');
				})
				.catch(error => {
					console.error('Error:', error);
					alert('저장에 실패했습니다.');
				});
		});

		// Toggle 섹션 표시/숨김 함수
		function toggleSection(buttonId, sectionId) {
			const button = document.getElementById(buttonId);
			const section = document.getElementById(sectionId);
			const allSections = document.querySelectorAll('.study-info, .past-info, .series-info, .report-info');
			const imageViewer = document.getElementById('image-viewer');

			button.addEventListener('click', () => {
				// 모든 섹션을 숨기고 이미지 뷰어의 'shifted' 클래스 제거
				allSections.forEach(sec => {
					if (sec !== section) {
						sec.classList.remove('show');
					}
				});

				// 클릭한 섹션을 토글
				section.classList.toggle('show');

				// 이미지 뷰어 위치 조정
				const anySectionShown = Array.from(allSections).some(sec => sec.classList.contains('show'));
				if (anySectionShown) {
					imageViewer.classList.add('shifted');
				} else {
					imageViewer.classList.remove('shifted');
				}
			});
		}

		toggleSection('toggle-info-btn', 'study-info');
		toggleSection('toggle-past-btn', 'past-info');
		toggleSection('toggle-series-btn', 'series-info');
		toggleSection('toggle-report-btn', 'report-info');

		// 코멘트 영역에 기본 텍스트 추가
		document.getElementById('comment').value = "[Finding]\n\n\n[Conclusion]\n\n\n[Recommend]\n\n\n";


		// 판독 지우기 버튼
		document.getElementById('delete-report').addEventListener('click', function () {
			document.getElementById('comment').value = '[Finding]\n\n\n[Conclusion]\n\n\n[Recommend]\n\n\n';
		});

		// 과거내역 span odd 행 색깔 바꾸기
		document.getElementById('toggle-past-btn').addEventListener('click', function () {
			const pastInfo = document.getElementById('past-info');

			if (pastInfo.classList.contains('show')) {
				const rows = document.querySelectorAll('#past-info .past-info-table .past-info-body');

				rows.forEach((row, rowIndex) => {
					const spans = row.querySelectorAll('span');

					spans.forEach((span, index) => {
						if (rowIndex % 2 == 0) {
							span.style.backgroundColor = 'hsl(180, 20%, 28%)';
						} else {
							span.style.backgroundColor = '';
						}
					});
				});
			}
		});